syntax = "proto2";

// redaction stuff
message raw_action_entry {
	required int32		offset = 1;
	required string 	replace_bytes= 2;
}

message redact_match_entry {
	required string 	magic = 1;
}

message deref_action_entry {
	required int32			offset = 1;
	optional raw_action_entry ra = 2;
	optional deref_action_entry	da = 3;
}

message redact_task_entry {
	required redact_match_entry match = 1;
	repeated raw_action_entry raw_actions = 2;
	repeated deref_action_entry deref_actions = 3;
}

// assertion

message tcp_assertion {
	required string			ip = 1;
}

message redact_tasks_entry {
	repeated redact_task_entry tasks = 1;
}

/*enum omit_match_types {
	NO_CHILDREN = 0;
	EXE_NAME_EQ = 1;
	EXE_SAME_AS_PARENT = 2;
	FILE_EQ = 3;
	TCP_DEST_IP_EQ = 4;
	MAGIC_NUM_EQ = 5;
}*/

enum encoding_types {
	ASCII = 0;
	HEX = 1;
}

// omitted processes ----------

message omitted_process {
	required int32		pid = 1;	
	required string 	reason = 2;
}

message omitted_processes {
	repeated omitted_process omitted_processes = 1;
}

// matches --------

message exe_name_match {
	required string match_str = 1;
	optional bool inverse = 2 [default = false];
}

message pid_match {
	required int32 pid = 1;
}

message ppid_match {
	required int32 ppid = 1;
}

message parent_exe_match {
	required string exe_name = 1;
}

message exe_same_as_parent_match {
	optional bool inverse = 1 [default = false];
}

message file_match {
	required string match_str = 1;
	optional bool inverse = 2 [default = false];
}

message tcp_dest_ip_match {
	required string match_str = 1;
	optional bool inverse = 2 [default = false];
}

message memory_match {
	required string match_str = 1;
	optional encoding_types encoding = 2 [default = ASCII];
	optional bool inverse = 3 [default = false];
}

message process_omit_matches {
	repeated exe_name_match exe_name_matches = 1;
	repeated file_match file_matches = 2;
	repeated tcp_dest_ip_match tcp_dest_ip_matches = 3;
	repeated memory_match memory_matches = 4;
	repeated pid_match pid_matches = 5;
	repeated ppid_match ppid_matches = 6;
	repeated parent_exe_match parent_exe_matches = 7;
}

message policy {
	repeated redact_task_entry tasks = 1;
	repeated tcp_assertion tcp_assertions = 2;
	required process_omit_matches process_omit_matches = 3;
}
